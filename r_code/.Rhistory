library(MASS) #package for 2D kernel density estimation
ps <- c(2,3,5,10,20,50,100,200,500)        #different choices for matrix dimension
circ    <- seq(0,2*pi,length=200)          #points to draw unit circle
circ_xy <- t(rbind( 0+sin(t), 0+cos(t)))   #coordinates of unit circle
euk <- read.csv('d:/dropbox/data/martin_platero_etal_2018/csvs/eukaryotic_OTUs.csv')
bac <- read.csv('d:/dropbox/data/martin_platero_etal_2018/csvs/bacterial_OTUs.csv')
env <- read.csv('d:/dropbox/data/martin_platero_etal_2018/csvs/environment.csv')
head(euk)
##--AGGREGATE BY GENUS--##
genera <- unique(bac[,7])   #extract unique phyla IDS
genera
##--AGGREGATE BY GENUS--##
genera <- unique(bac[,7])
GEN    <- data.frame()
genera <- unique(bac[,7])
GEN    <- data.frame()
for(i in 1:length(genera)){
xtmp <- apply(as.data.frame(bac[bac[,3]==genera[i],9:ncol(bac)]),2,sum)
GEN  <- rbind(GEN,xtmp)                                                #attach as rows to the empty data frame
}
i
genera[i]
bac[,3]
genera[i]
genera <- unique(bac[,7])
GEN    <- data.frame()
for(i in 1:length(genera)){
xtmp <- apply(as.data.frame(bac[bac[,7]==genera[i],9:ncol(bac)]),2,sum)
GEN  <- rbind(GEN,xtmp)                                                #attach as rows to the empty data frame
}
GEN
dim(GEN)
GEN[,1:3]
GEN[1:3,]
plot(GEN[1,9:ncol(GEN)])
GEN[1,9:ncol(GEN)]
plot(GEN[1,9:ncol(GEN)])
plot(as.numeric(GEN[1,9:ncol(GEN)]))
plot(as.numeric(GEN[2,9:ncol(GEN)]))
plot(as.numeric(GEN[3,9:ncol(GEN)]))
plot(as.numeric(GEN[4,9:ncol(GEN)]))
rowSums(GEN[,9:ncol(GEN)])
matplot(as.numeric(GEN[1:10,9:ncol(GEN)]))
matplot(as.matrix(GEN[1:10,9:ncol(GEN)]))
matplot(as.matrixt((GEN[1:10,9:ncol(GEN)])))
matplot(as.matrix(t(GEN[1:10,9:ncol(GEN)])))
matplot(as.matrix(t(GEN[1:10,9:ncol(GEN)])),type='l')
matplot(as.matrix(t(log(GEN[1:10,9:ncol(GEN)])),type='l'))
matplot(as.matrix(t(log(GEN[1:10,9:ncol(GEN)]))),type='l')
euk <- read.csv('d:/dropbox/data/martin_platero_etal_2018/csvs/eukaryotic_OTUs.csv')
bac <- read.csv('d:/dropbox/data/martin_platero_etal_2018/csvs/bacterial_OTUs.csv')
env <- read.csv('d:/dropbox/data/martin_platero_etal_2018/csvs/environment.csv')
gen_bac <- unique(bac[,7])
GEN_bac <- data.frame()
for(i in 1:length(gen_bac)){
xtmp <- apply(as.data.frame(bac[bac[,7]==gen_bac[i],9:ncol(bac)]),2,sum)
GEN  <- rbind(GEN,xtmp)                                                #attach as rows to the empty data frame
}
gen_euk <- unique(euk[,7])
gen_euk
gen_euk <- unique(euk[,7])
gen_euk <- unique(euk[,7])
GEN_euk <- data.frame()
for(i in 1:length(gen_euk)){
xtmp <- apply(as.data.frame(euk[euk[,7]==gen_euk[i],9:ncol(euk)]),2,sum)
GEN_euk <- rbind()
}
par(mfrow=c(2,1))
matplot(as.matrix(t(log(GEN[1:10,9:ncol(GEN)]))),type='l')
par(mfrow=c(2,1),mar=c(3,3,3,3))
matplot(as.matrix(t(log(GEN[1:10,9:ncol(GEN)]))),type='l')
par(mfrow=c(2,1),mar=c(2,5,2,2))
matplot(as.matrix(t(log(GEN[1:10,9:ncol(GEN)]))),type='l')
matplot(as.matrix(t(log(GEN_bac[1:10,9:ncol(GEN_bac)]))),type='l')
gen_bac <- unique(bac[,7])
GEN_bac <- data.frame()
for(i in 1:length(gen_bac)){
xtmp     <- apply(as.data.frame(bac[bac[,7]==gen_bac[i],9:ncol(bac)]),2,sum)
GEN_bac  <- rbind(GEN_bac,xtmp)                                                #attach as rows to the empty data frame
}
gen_euk <- unique(euk[,7])
GEN_euk <- data.frame()
for(i in 1:length(gen_euk)){
xtmp <- apply(as.data.frame(euk[euk[,7]==gen_euk[i],9:ncol(euk)]),2,sum)
GEN_euk <- rbind()
}
par(mfrow=c(2,1),mar=c(2,5,2,2))
matplot(as.matrix(t(log(GEN_bac[1:10,9:ncol(GEN_bac)]))),type='l')
matplot(as.matrix(t(log(GEN[1:10,9:ncol(GEN)]))),type='l')
par(mfrow=c(2,1),mar=c(2,5,2,2))
matplot(as.matrix(t(log(GEN_bac[1:10,9:ncol(GEN_bac)]))),type='l')
matplot(as.matrix(t(log(GEN_euk[1:10,9:ncol(GEN_euk)]))),type='l')
gen_euk <- unique(euk[,7])
GEN_euk <- data.frame()
for(i in 1:length(gen_euk)){
xtmp <- apply(as.data.frame(euk[euk[,7]==gen_euk[i],9:ncol(euk)]),2,sum)
GEN_euk <- rbind(GEN_euk,xtmp)
}
par(mfrow=c(2,1),mar=c(2,5,2,2))
matplot(as.matrix(t(log(GEN_bac[1:10,9:ncol(GEN_bac)]))),type='l')
matplot(as.matrix(t(log(GEN_euk[1:10,9:ncol(GEN_euk)]))),type='l')
library(rstan)
################################################################
## COMPILE MODEL ###############################################
################################################################
options(mc.cores=parallel::detectCores())
mod <- stan_model('d:/dropbox/working/ecological_stability/r_code/MVAR1.stan')
mod <- stan_model('d:/dropbox/working/ecological_stability/r_code/MVAR1.stan')
GEN_bac[1:10,1:10]
dat_gen_bac <- list(T=ncol(GEN_bac),
p=nrow(GEN_bac),
Y=log(GEN_bac))
par(mfrow=c(2,1),mar=c(2,5,2,2))
matplot(as.matrix(t(dat_gem_bac[1:10,])),type='l')
par(mfrow=c(2,1),mar=c(2,5,2,2))
matplot(as.matrix(t(dat_gen_bac[1:10,])),type='l')
matplot(as.matrix(t(dat_gen_bac$Y[1:10,])),type='l')
dat_gen_bac <- list(T=ncol(GEN_bac),
p=nrow(GEN_bac),
Y=log(GEN_bac))
par(mfrow=c(2,1),mar=c(2,5,2,2))
matplot(as.matrix(t(dat_gen_bac$Y[1:10,])),type='l')
dat_gen_euk <- list(T=ncol(GEN_euk),
p=nrow(GEN_euk),
Y=log(GEN_euk))
par(mfrow=c(2,1),mar=c(2,5,2,2))
matplot(as.matrix(t(dat_gen_bac$Y[1:10,])),type='l')
matplot(as.matrix(t(dat_gen_euk$Y[1:10,])),type='l')
mcmc_bac <- sampling(mod, data=dat_gen_bac)
mod <- stan_model('d:/dropbox/working/ecological_stability/r_code/MVAR1.stan')
mcmc_bac <- sampling(mod, data=dat_gen_bac)
mcmc_bac <- sampling(mod, data=dat_gen_bac, open_progress=TRUE)
mcmc_bac <- sampling(mod, data=dat_gen_bac)
